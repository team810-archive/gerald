// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc810.SteamWorksRobot.subsystems;

import org.usfirst.frc810.SteamWorksRobot.RobotMap;
import org.usfirst.frc810.SteamWorksRobot.commands.Drive;

import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController fL = RobotMap.driveTrainFL;
    private final SpeedController bL = RobotMap.driveTrainBL;
    private final SpeedController fR = RobotMap.driveTrainFR;
    private final SpeedController bR = RobotMap.driveTrainBR;
    private final RobotDrive robotDrive41 = RobotMap.driveTrainRobotDrive41;
    private final AnalogInput ultra = RobotMap.driveTrainUltra;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new Drive(-2));

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    private double g = RobotMap.getGyroAngle();
	public void resetG() {
		// TODO Auto-generated method stub
		g = RobotMap.getGyroAngle();
	}
    public void mecanum(double x, double y, double r){
    	if(Math.abs(r)>.2){
    		resetG();
    	}
    	robotDrive41.mecanumDrive_Cartesian(x, y, -r,  RobotMap.getGyroAngle()-g);
    }
}

